Terraform(IAAC)

-> Imperative approach : Follow the sequence of steps
AWS CLI
Bash scripts

-> Declarative approach : 
Terraform
Cloud formation
ARM templates
Deployment manager


To set the environment path :-> win+r > sysdm.cpl --> Windows

Linux :-> ./bashrc


if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
PATH="$HOME/.local/bin:$HOME/bin:$PATH:/home/keerthi/Terraform"
fi
export PATH

or export LD_LIBRARY_PATH=/lib:/usr/lib:/usr/local/lib

export /home/keerthi/Terraform=/lib:/usr/lib:/usr/local/lib

export PATH=$PATH:home/keerthi/Terraform



******************************************************************************************************************************************************************************

Main commands:
  init          Prepare your working directory for other commands
  validate      Check whether the configuration is valid
  plan          Show changes required by the current configuration
  apply         Create or update infrastructure
  destroy       Destroy previously-created infrastructure

All other commands:
  console       Try Terraform expressions at an interactive command prompt
  fmt           Reformat your configuration in the standard style
  force-unlock  Release a stuck lock on the current workspace
  get           Install or upgrade remote Terraform modules
  graph         Generate a Graphviz graph of the steps in an operation
  import        Associate existing infrastructure with a Terraform resource
  login         Obtain and save credentials for a remote host
  logout        Remove locally-stored credentials for a remote host
  output        Show output values from your root module
  providers     Show the providers required for this configuration
  refresh       Update the state to match remote systems
  show          Show the current state or a saved plan
  state         Advanced state management
  taint         Mark a resource instance as not fully functional
  test          Experimental support for module integration testing
  untaint       Remove the 'tainted' state from a resource instance
  version       Show the current Terraform version
  workspace     Workspace management

Global options (use these before the subcommand, if any):
  -chdir=DIR    Switch to a different working directory before executing the
                given subcommand.
  -help         Show this help output, or the help for a specified subcommand.
  -version      An alias for the "version" subcommand.


***************************************************************************************************************************************************************************

E:\Terraform>terraform workspace
Usage: terraform [global options] workspace

  new, list, show, select and delete Terraform workspaces.

E:\Terraform>terraform workspace list
* default


E:\Terraform>terraform workspace new dev
Created and switched to workspace "dev"!

You're now on a new, empty workspace. Workspaces isolate their state,
so if you run "terraform plan" Terraform will not see any existing state
for this configuration.

E:\Terraform>terraform workspace list
  default
* dev


E:\Terraform>terraform workspace new uat
Created and switched to workspace "uat"!

You're now on a new, empty workspace. Workspaces isolate their state,
so if you run "terraform plan" Terraform will not see any existing state
for this configuration.

E:\Terraform>terraform workspace list
  default
  dev
* uat


E:\Terraform>terraform workspace select default
Switched to workspace "default".

E:\Terraform>terraform workspace list
* default
  dev
  uat


*** without yes ===> 


***********************************************************

Creating ppk and pem key

ssh-keygen.exe -f test

copy test test.pem

**********************************************************8

Permission error pem key


$path = ".\aws-ec2-key.pem"

icacls.exe $path /reset

icacls.exe $path /GRANT:R "$($env:USERNAME):(R)"

icacls.exe $path /inheritance:r